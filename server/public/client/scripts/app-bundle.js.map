{"version":3,"sources":["src/admin.js","src/app.js","src/environment.js","src/home.js","src/main.js","src/resources/index.js","src/services/async-http-client.js","src/services/fixtures.js","src/services/loggedInUser.js","src/services/messages.js","src/services/riderService.js","src/services/services-fixtures.js","src/viewmodels/adminLogin/adminLogin.js","src/viewmodels/administrateTweets/administrateTweets.js","src/viewmodels/administrateUsers/administrateUsers.js","src/viewmodels/administrateUsers/entry.js","src/viewmodels/login/login.js","src/viewmodels/profile/profile.js","src/viewmodels/settings/settings.js","src/viewmodels/signup/signup.js","src/viewmodels/socialGraph/socialGraph.js","src/viewmodels/statistics/statistics.js","src/viewmodels/timeline_friends/timeline_friends.js","src/viewmodels/timeline_global/timeline_global.js","src/viewmodels/tweeteditor/tweeteditor.js","src/viewmodels/userProfile/userProfile.js","src/viewmodels/userView/entry.js","src/viewmodels/userView/userView.js"],"names":["Home","au","rs","aurelia","riderService","configureRouter","config","router","map","route","name","moduleId","nav","title","mapUnknownRoutes","logout","console","log","App","ea","lu","loggedIn","showSignup","loggedInUser","subscribe","navigate","replace","trigger","msg","status","success","error","type","setRoot","then","navigateToRoute","message","debug","testing","errorMsg","successMsg","configure","use","standardConfiguration","feature","developmentLogging","plugin","start","AsyncHttpClient","httpClient","fixtures","http","withBaseUrl","baseUrl","put","url","obj","get","post","delete","authenticate","user","response","content","localStorage","donation","JSON","stringify","configuration","withHeader","token","publish","catch","comm","responseType","statusCode","statusText","clearAuthentication","Fixtures","methods","users","firstName","lastName","email","password","LoggedInUser","getLoggedInUser","setLoggedInUser","LoginStatus","ServerResponseStatus","RiderService","data","ac","getUsers","res","register","userName","newUser","login","getSettings","getProfile","updateSettings","settings","postTweet","text","tweet","getGlobalTweets","getFriendsTweets","getUserList","getUser","id","getTweetsForUser","addFriend","removeFriend","deleteTweets","tweetsToDelete","adminDeleteTweets","adminDeleteUsers","usersToDelete","getStatistics","Login","Settings","tweets","i","length","time","substring","deleteSelectedTweets","forEach","isSelected","push","indexDel","indexOf","splice","UserView","r","entries","deleteSelectedUsers","entry","selectedUsers","EntryCustomElement","viewProfile","viewProfileFunction","userInfo","Profile","Signup","d3","socialGraph","nodes","links","attached","userList","_id","j","friends","svg","select","width","attr","height","color","scaleOrdinal","schemeCategory20","simulation","forceSimulation","force","forceLink","d","distance","strength","forceManyBody","forceCenter","link","append","selectAll","enter","Math","sqrt","value","node","group","call","drag","on","dragstarted","dragged","dragended","ticked","source","x","y","target","event","active","alphaTarget","restart","fx","fy","Timeline_Friends","stats","Timeline_Global","TweetEditor","tweetText","UserProfile","userIsFriend","activate","params"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import { inject, Aurelia } from 'aurelia-framework';\nimport RiderService from 'services/riderService';\n\n@inject(Aurelia, RiderService)\nexport class Home {\n\n  constructor(au, rs) {\n    this.aurelia = au;\n    this.riderService = rs;\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'administrateTweets'], name: 'administrateTweets', moduleId: 'viewmodels/administrateTweets/administrateTweets', nav: true, title: 'administrateTweets' },\n      { route: ['administrateUsers'], name: 'administrateUsers', moduleId: 'viewmodels/administrateUsers/administrateUsers', nav: true, title: 'administrateUsers' },\n    ]);\n    config.mapUnknownRoutes(instruction => {\n      return '';\n    });\n    this.router = router;\n\n  }\n\n  logout(){\n    console.log('logout pressed');\n    this.riderService.logout();\n    return true;\n  }\n\n}\n","import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './services/messages';\nimport RiderService from './services/riderService';\nimport loggedInUser from './services/loggedInUser';\n\n@inject(Aurelia, EventAggregator, RiderService, loggedInUser)\nexport class App {\n\n  loggedIn = false;\n  showSignup = true;\n\n  constructor(au, ea, rs, lu) {\n    this.au = au;\n    this.ea = ea;\n    this.riderService = rs;\n    this.loggedInUser = lu;\n\n    /* navigate to protected routes depending on authentication success */\n\n    ea.subscribe(LoginStatus, msg => {\n      this.router.navigate('/', { replace: true, trigger: false });\n      if (msg.status.success === true) {\n        this.error = null;\n        if(msg.type === 'reguser') {\n          au.setRoot('home').then(() => {\n            this.router.navigateToRoute('tweeteditor');\n          });\n        }\n        else if (msg.type === 'admin') {\n          au.setRoot('admin').then(() => {\n            this.router.navigateToRoute('administrateTweets');\n          });\n        }\n\n      } else if (!msg.status.success && msg.type !== 'logout') {\n        this.error = msg.status.message;\n\n      } else if (msg.type === 'logout'){\n        au.setRoot('app').then(() => {\n          this.router.navigateToRoute('login');\n        });\n      }\n\n    });\n\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'login'], name: 'login', moduleId: 'viewmodels/login/login', nav: true, title: 'Login' },\n      { route: 'signup', name: 'signup', moduleId: 'viewmodels/signup/signup', nav: true, title: 'Signup' },\n      { route: 'adminLogin', name: 'adminLogin', moduleId: 'viewmodels/adminLogin/adminLogin', nav: true, title: 'AdminLogin' }\n    ]);\n\n    config.mapUnknownRoutes(instruction => {\n      return 'login';\n    });\n    this.router = router;\n  }\n\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import { inject, Aurelia } from 'aurelia-framework';\nimport RiderService from 'services/riderService';\nimport {EventAggregator} from 'aurelia-event-aggregator'\nimport {ServerResponseStatus} from 'services/messages';\n\n@inject(Aurelia, RiderService, EventAggregator)\nexport class Home {\n\n  constructor(au, rs, ea) {\n    this.aurelia = au;\n    this.riderService = rs;\n    this.ea = ea;\n    this.errorMsg = null;\n    this.successMsg = null;\n    this.ea.subscribe(ServerResponseStatus, msg => {\n      if(!msg.status.success) {\n        this.errorMsg = msg.status.message;\n        this.successMsg = null;\n      }\n      else {\n        this.errorMsg = null;\n      }\n    });\n  }\n\n  logout(){\n    this.riderService.logout();\n    return true;\n  }\n\n  configureRouter(config, router) {\n    config.map([\n      { route: ['', 'tweeteditor'], name: 'tweeteditor', moduleId: 'viewmodels/tweeteditor/tweeteditor', nav: true, title: 'tweeteditor' },\n      { route: 'timeline_global', name: 'timeline_global', moduleId: 'viewmodels/timeline_global/timeline_global', nav: true, title: 'timeline_global' },\n      { route: 'timeline_friends', name: 'timeline_friends', moduleId: 'viewmodels/timeline_friends/timeline_friends', nav: true, title: 'timeline_friends' },\n      { route: 'settings', name: 'settings', moduleId: 'viewmodels/settings/settings', nav: true, title: 'settings' },\n      { route: 'profile', name: 'profile', moduleId: 'viewmodels/profile/profile', nav: true, title: 'profile' },\n      { route: 'userView', name: 'userView', moduleId: 'viewmodels/userView/userView', nav: true, title: 'userView' },\n      { route: 'userProfile/:id', name: 'userProfile', moduleId: 'viewmodels/userProfile/userProfile', title: 'userProfile' },\n      { route: 'statistics', name: 'statistics', moduleId: 'viewmodels/statistics/statistics', nav: true, title: 'statistics' },\n      { route: 'socialGraph', name: 'socialGraph', moduleId: 'viewmodels/socialGraph/socialGraph', nav: true, title: 'socialGraph' }\n    ]);\n    this.router = router;\n    \n  }\n\n\n\n}\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-http-client';\nimport Fixtures from './fixtures';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './messages';\n\n@inject(HttpClient, Fixtures, EventAggregator )\nexport default class AsyncHttpClient {\n\n  constructor(httpClient, fixtures, ea) {\n    this.http = httpClient;\n    this.http.configure(http => {\n      http.withBaseUrl(fixtures.baseUrl);\n    });\n    this.ea = ea;\n  }\n\n  put(url, obj){\n    return this.http.put(url, obj);\n  }\n\n  get(url) {\n    return this.http.get(url);\n  }\n\n  post(url, obj) {\n    return this.http.post(url, obj);\n  }\n\n  delete(url) {\n    return this.http.delete(url);\n  }\n\n  authenticate(url, user, type) {\n    this.http.post(url, user).then(response => {\n      const status = response.content;\n      if (status.success) {\n        console.log('Authentication successful');\n        localStorage.donation = JSON.stringify(response.content);\n        this.http.configure(configuration => {\n          configuration.withHeader('Authorization', 'bearer ' + response.content.token);\n        });\n      }\n      this.ea.publish(new LoginStatus(status, type));\n\n    }).catch(comm => {\n      let status;\n      if (comm.responseType === 'error' && comm.statusCode === 0){\n        status = {\n          success: false,\n          message: 'service currently unavailable. Please try again later.',\n        };\n      }\n      else {\n        status = {\n          success: false,\n          message: error.statusText,\n        };\n      }\n      this.ea.publish(new LoginStatus(status, 'error'));\n    });\n  }\n\n  clearAuthentication() {\n    localStorage.donation = null;\n    this.http.configure(configuration => {\n      configuration.withHeader('Authorization', '');\n    });\n  }\n}\n","export default class Fixtures {\n\n  methods = ['Cash', 'PayPal'];\n\n  users = [\n    {\n      firstName: 'Marge',\n      lastName: 'Simpson',\n      email: 'marge@simpson.com',\n      password: 'secret'\n    }\n  ];\n\n  baseUrl = 'https://peaceful-plateau-66295.herokuapp.com';\n}\n","import {inject, Aurelia} from 'aurelia-framework';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport {LoginStatus} from './messages';\n\n@inject(EventAggregator)\nexport default class LoggedInUser {\n    \n    constructor(ea) {\n        this.ea = ea;\n        ea.subscribe(LoginStatus, msg => {\n            console.log(msg);\n            this.loggedInUser = msg.status.user;\n            if (msg.status.success === true) {\n                \n            }\n        });\n    }\n\n    getLoggedInUser(user){\n        return this.loggedInUser;\n    }\n\n    setLoggedInUser(user) {\n      this.loggedInUser = user;\n    }\n}\n","\n/*\n  LoginStatus: event used to provide information about the success of a login / registration process\n*/\nexport class LoginStatus {\n  constructor(status, type) {\n    this.status = status;\n    this.type = type;\n  }\n}\n/*\n  ServerResponseStatus: event used to provide information about the success of an operation.\n  status object should contain success and message.\n*/\nexport class ServerResponseStatus {\n  constructor (status) {\n    this.status = status;\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport Fixtures from './fixtures';\nimport {LoginStatus, ServerResponseStatus} from './messages';\nimport {EventAggregator} from 'aurelia-event-aggregator';\nimport AsyncHttpClient from './async-http-client';\n\n/* communication service to the rider backend */\n\n@inject(Fixtures, EventAggregator, AsyncHttpClient)\nexport default class RiderService {\n\n  constructor(data, ea, ac) {\n    this.methods = data.methods;\n    this.ea = ea;\n    this.ac = ac;\n    //this.getCandidates();\n  }\n\n  getUsers() {\n    this.ac.get('/api/users').then(res => {\n      this.users = res.content;\n      console.log(this.users);\n    });\n  }\n\n  register(firstName, lastName, userName, email, password) {\n    const newUser = {\n      firstName: firstName,\n      lastName: lastName,\n      userName: userName,\n      email: email,\n      password: password\n    };\n    this.ac.post('/api/users/register', newUser);\n  }\n\n  login(email, password, type) {\n    const user = {\n      email: email,\n      password: password\n    };\n    this.ac.authenticate('/api/users/authenticate', user, type);\n  }\n\n  logout() {\n    const status = {\n      success: false,\n      message: ''\n    };\n    this.ac.clearAuthentication();\n    this.ea.publish(new LoginStatus(status, 'logout'));\n  }\n  \n  getSettings(){\n    return(this.ac.get('/api/users/getSettings'));\n  }\n\n  getProfile(){\n    return(this.ac.get('/api/users/getProfile'));\n  }\n\n  updateSettings(firstName, lastName, userName, password, email) {\n    let settings = {\n      firstName: firstName,\n      lastName: lastName,\n      userName: userName,\n      password: password,\n      email: email\n    };\n    this.ac.post('/api/users/updateSettings', settings);\n  }\n\n  postTweet(text){\n    const tweet = {\n      text: text,\n    };\n    //console.log('posting a tweet ' + text);\n    this.ac.post('/api/users/postTweet', tweet).then(response => {\n      let status = {\n        success: true,\n        message: 'tweet successfully published.',\n      };\n      this.ea.publish(new ServerResponseStatus(status));\n    }).catch(response => {\n      /* detect server unavailability */\n      let status = null;\n      if(response.responseType === 'error' && response.statusCode === 0){\n        status = {\n          success: false,\n          message: 'Server currently unavailable. Please try again later.',\n        };\n      }\n      /* detect other errors */\n      else {\n        status = {\n          success: false,\n          message: 'error publishing tweet.',\n        };\n      }\n      this.ea.publish(new ServerResponseStatus(status));\n    });\n  }  \n    \n  getGlobalTweets(){\n    return this.ac.get('/api/users/getAllTweets');\n  }\n\n  getFriendsTweets() {\n    return this.ac.get('/api/users/getFriendsTweets');\n  }\n  \n  getUserList() {\n    return this.ac.get('api/users/getUserList');\n  }\n\n  getUser(id) {\n    return this.ac.get('api/users/getUser/' + id);\n  }\n\n  getTweetsForUser(id) {\n    return this.ac.get('/api/users/getTweetsForUser/' + id);\n  }\n\n  addFriend(id) {\n    return this.ac.post('/api/users/addFriend', id);\n  }\n\n  removeFriend(id) {\n    return this.ac.delete('/api/users/removeFriend/' + id);\n  }\n\n  /* delete tweets can only delete tweet of the currently logged in user.\n   * User identity is determined bye the json web token. */\n  deleteTweets(tweetsToDelete) {\n    this.ac.post('/api/users/deleteTweets', tweetsToDelete);\n  }\n\n  adminDeleteTweets(tweetsToDelete) {\n    this.ac.post('/api/users/adminDeleteTweets', tweetsToDelete);\n  }\n\n  adminDeleteUsers(usersToDelete) {\n    this.ac.post('/api/users/adminDeleteUsers', usersToDelete);\n  }\n\n  getStatistics() {\n    return this.ac.get('/api/users/getStatistics');\n  }\n\n}\n","export default class Fixtures {\n\n  baseUrl = 'https://peaceful-plateau-66295.herokuapp.com';\n  methods = ['Cash', 'PayPal'];\n}\n","import {inject} from 'aurelia-framework';\nimport RiderService from '../../services/riderService';\n//import EventAggregator from 'aurelia-event-aggregator';\n\n@inject(RiderService)\nexport class Login {\n\n  email = 'marge@simpson.com';\n  password = 'secret';\n\n  constructor(rs) {\n    this.riderService = rs;\n    //this.ea = ea;\n    /*ea.subscribe(LoginStatus, msg => {\n      this.error = msg.status.message;\n      if (!msg.status.success){\n        this.error = msg.status.message;\n      }\n    });*/\n  }\n\n  login() {\n    this.riderService.login(this.email, this.password, 'admin');\n  }\n  /*\n  logout(){\n    console.log('Trying to log out ${this.email}');\n    this.riderService.logout();\n  }\n  */\n}\n","import {inject} from 'aurelia-framework';\nimport RiderService from '../../services/riderService';\n\n@inject(RiderService)\nexport class Settings {\n\n  constructor(rs) {\n    this.riderService = rs;\n    rs.getGlobalTweets().then ( res => {\n      this.tweets = res.content;\n      for (let i = 0; i < this.tweets.length; i++){\n        this.tweets[i].time = this.tweets[i].time.substring(0, 10) + ', '\n          + this.tweets[i].time.substring(11, 16);\n      }\n    });\n  }\n\n  deleteSelectedTweets(){\n    let tweetsToDelete = [];\n    this.tweets.forEach(tweet => {\n      if (tweet.isSelected) {\n        tweetsToDelete.push(tweet);\n        let indexDel = this.tweets.indexOf(tweet);\n        this.tweets.splice(indexDel, 1);\n      }\n    });\n    this.riderService.adminDeleteTweets(tweetsToDelete);\n\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport RiderService from '../../services/riderService';\n\n@inject(RiderService, Router)\nexport class UserView {\n\n  constructor(rs, r) {\n    this.riderService = rs;\n    this.router = r;\n    this.riderService.getUserList().then( res => {\n      this.entries = res.content;\n    });\n  }\n\n  deleteSelectedUsers(entry) {\n    let selectedUsers = [];\n    this.entries.forEach( entry => {\n      if (entry.isSelected) {\n        selectedUsers.push(entry);\n        let i = this.entries.indexOf(entry);\n        this.entries.splice(i, 1);\n      }\n    });\n    this.riderService.adminDeleteUsers(selectedUsers);\n  }\n\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class EntryCustomElement {\n    @bindable entry;\n    @bindable viewProfileFunction;\n\n    viewProfile() {\n      this.viewProfileFunction();\n    }\n\n}","import {inject} from 'aurelia-framework';\nimport RiderService from '../../services/riderService';\n\n@inject(RiderService)\nexport class Login {\n\n  email = 'marge@simpson.com';\n  password = 'secret';\n\n  constructor(rs) {\n    this.riderService = rs;\n  }\n\n  login() {\n    console.log(`Trying to log in ${this.email}`);\n    let userInfo = {\n      email: this.email,\n      password: this.password\n    };\n    \n    this.riderService.login(this.email, this.password, 'reguser');\n  }\n\n  logout(){\n    console.log('Trying to log out ${this.email}');\n    this.riderService.logout();\n  }\n}\n","import {inject} from 'aurelia-framework';\nimport RiderService from '../../services/riderService';\nimport LoggedInUser from '../../services/loggedInUser';\n\n@inject(RiderService, LoggedInUser)\nexport class Profile {\n\n  constructor(rs, lu) {\n    this.riderService = rs;\n    this.lu = lu;\n    this.loggedInUser = lu.getLoggedInUser();\n\n    this.riderService.getProfile().then(res => {\n        this.tweets = res.content;\n        for (let i = 0; i < this.tweets.length; i++){\n            this.tweets[i].time = this.tweets[i].time.substring(0, 10) + ', '\n                + this.tweets[i].time.substring(11, 16);\n        }\n    });\n  }\n\n  deleteSelectedTweets(){\n    let tweetsToDelete = [];\n    this.tweets.forEach(tweet => {\n      if (tweet.isSelected) {\n        tweetsToDelete.push(tweet);\n        let indexDel = this.tweets.indexOf(tweet);\n        this.tweets.splice(indexDel, 1);\n      }\n    });\n    this.riderService.deleteTweets(tweetsToDelete);\n\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport RiderService from '../../services/riderService';\n\n@inject(RiderService)\nexport class Settings {\n\n    constructor(rs) {\n        this.riderService = rs;\n        this.riderService.getSettings().then(res => {\n            this.firstName = res.content.firstName;\n            this.lastName = res.content.lastName;\n            this.userName = res.content.userName;\n            this.email = res.content.email;\n            this.password = res.content.password;\n        });\n    }\n\n    updateSettings(){\n        console.log('Invoking riderservice to update settings');\n        this.riderService.updateSettings(this.firstName, this.lastName, \n            this.userName, this.password, this.email);\n    }\n\n}","import {inject} from 'aurelia-framework';\nimport RiderService from '../../services/riderService';\n\n@inject(RiderService)\nexport class Signup {\n\n  firstName = 'Paul';\n  lastName = 'Panther';\n  userName = 'PauliP';\n  email = 'Paul@Panther.com';\n  password = 'secret';\n\n  constructor(rs) {\n    this.riderService = rs;\n    //this.ea = ea;\n    /*ea.subscribe(LoginStatus, msg => {\n      this.error = msg.status.message;\n      if (!msg.status.success){\n        this.error = msg.status.message;\n      }\n    });*/\n  }\n\n  register() {\n    this.showSignup = false;\n    this.riderService.register(this.firstName, this.lastName, this.userName, this.email, this.password);\n    //this.donationService.login(this.email, this.password);\n  }\n}\n","import * as d3 from \"d3\";\nimport {inject} from 'aurelia-framework';\nimport riderService from '../../services/riderService';\n\n\n@inject(riderService)\nexport class socialGraph {\n\n  nodes = [];\n  links = [];\n\n  constructor(rs) {\n    this.riderService = rs;\n  }\n\n  attached() {\n\n    this.riderService.getUserList().then ( res => {\n\n      this.userList = res.content;\n\n      for (let i = 0; i < this.userList.length; i++) {\n        this.nodes.push({\"id\": this.userList[i]._id});\n      }\n\n      for (let i = 0; i < this.userList.length; i++) {\n        for (let j = 0; j < this.userList[i].friends.length; j++) {\n          if (this.userList[i] === null)\n            continue;\n          this.links.push({\"source\": this.userList[i]._id, \"target\": this.userList[i].friends[j]});\n        }\n\n      }\n    }).then ( x => {\n\n    var svg = d3.select(\"svg\"),\n      width = +svg.attr(\"width\"),\n      height = +svg.attr(\"height\");\n\n    var color = d3.scaleOrdinal(d3.schemeCategory20);\n\n    var simulation = d3.forceSimulation()\n      .force(\"link\", d3.forceLink().id(function (d) {\n        return d.id;\n      }), d3.forceLink().distance(function(d) {\n        return d.distance;}).strength(0.1))\n      .force(\"charge\", d3.forceManyBody())\n      .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\n\n    var link = svg.append(\"g\")\n      .attr(\"class\", \"links\")\n      .selectAll(\"line\")\n      .data(this.links)\n      .enter().append(\"line\")\n      .attr(\"stroke-width\", function (d) {\n        return Math.sqrt(d.value);\n      });\n\n    var node = svg.append(\"g\")\n      .attr(\"class\", \"nodes\")\n      .selectAll(\"circle\")\n      .data(this.nodes)\n      .enter().append(\"circle\")\n      .attr(\"r\", 10)\n      .attr(\"fill\", function (d) {\n        return color(d.group);\n      })\n      .call(d3.drag()\n        .on(\"start\", dragstarted)\n        .on(\"drag\", dragged)\n        .on(\"end\", dragended));\n\n    node.append(\"title\")\n      .text(function (d) {\n        return d.id;\n      });\n\n    node.append(\"text\")\n      .attr(\"dx\", 12)\n      .attr(\"dy\", \".35em\")\n      .text(function(d) { return d.id });\n\n    simulation\n      .nodes(this.nodes)\n      .on(\"tick\", ticked);\n\n    simulation.force(\"link\")\n      .links(this.links).distance(200);\n\n    function ticked() {\n      link\n        .attr(\"x1\", function (d) {\n          return d.source.x;\n        })\n        .attr(\"y1\", function (d) {\n          return d.source.y;\n        })\n        .attr(\"x2\", function (d) {\n          return d.target.x;\n        })\n        .attr(\"y2\", function (d) {\n          return d.target.y;\n        });\n\n      node\n        .attr(\"cx\", function (d) {\n          return d.x;\n        })\n        .attr(\"cy\", function (d) {\n          return d.y;\n        });\n    }\n\n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n  });\n\n  }\n\n}\n\n\n","import {inject} from 'aurelia-framework';\nimport RiderService from '../../services/riderService';\n\n@inject(RiderService)\nexport class Timeline_Friends {\n\n  constructor(rs) {\n    this.riderService = rs;\n    this.riderService.getStatistics().then(res => {\n      this.stats = res.content;\n    });\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport RiderService from '../../services/riderService';\n\n@inject(RiderService)\nexport class Timeline_Friends {\n\n  constructor(rs) {\n    this.riderService = rs;\n    this.riderService.getFriendsTweets().then(res => {\n        this.tweets = res.content;\n        for (let i = 0; i < this.tweets.length; i++){\n            this.tweets[i].time = this.tweets[i].time.substring(0, 10) + ', '\n                + this.tweets[i].time.substring(11, 16);\n        }\n        console.log(this.tweets);\n    });\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport RiderService from '../../services/riderService';\n\n@inject(RiderService)\nexport class Timeline_Global {\n\n  constructor(rs) {\n    this.riderService = rs;\n    this.riderService.getGlobalTweets().then(res => {\n        this.tweets = res.content;\n        for (let i = 0; i < this.tweets.length; i++){\n            this.tweets[i].time = this.tweets[i].time.substring(0, 10) + ', '\n                + this.tweets[i].time.substring(11, 16);\n        }\n        console.log(this.tweets);\n    });\n  }\n\n}","import {inject} from 'aurelia-framework';\nimport RiderService from '../../services/riderService';\n\n\n@inject(RiderService)\nexport class TweetEditor {\n\n  constructor(rs) {\n    this.riderService = rs;\n  }\n\n  postTweet(){\n    this.riderService.postTweet(this.tweetText);\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport RiderService from '../../services/riderService';\nimport LoggedInUser from '../../services/loggedInUser';\n\n@inject(RiderService, Router, LoggedInUser)\nexport class UserProfile {\n\n    constructor(rs, r, lu) {\n        this.riderService = rs;\n        this.router = r;\n        this.lu = lu;\n        this.loggedInUser = this.lu.getLoggedInUser();\n        this.userIsFriend = false;\n        \n    }\n\n    /* load first user details and then the tweets */\n    activate(params) {\n        \n        this.riderService.getUser(params.id).then( res => {\n            this.user = res.content;\n        }).then (val => {\n            for (let i = 0; i < this.loggedInUser.friends.length; i++) {\n                if (this.loggedInUser.friends[i]  == this.user._id){\n                    this.userIsFriend = true;\n                    break;\n                }\n            }\n        });\n\n        this.riderService.getTweetsForUser(params.id).then(res => {\n            this.tweets = res.content;\n            for (let i = 0; i < this.tweets.length; i++){\n                this.tweets[i].time = this.tweets[i].time.substring(0, 10) + ', '\n                    + this.tweets[i].time.substring(11, 16);\n            }\n        });\n\n    }\n\n    addFriend(){\n        this.riderService.addFriend(this.user._id);\n        this.userIsFriend = true;\n        this.loggedInUser.friends.push(this.user);\n        this.lu.setLoggedInUser(this.loggedInUser);\n    }\n\n    removeFriend() {\n        this.riderService.removeFriend(this.user._id);\n        this.userIsFriend = false;\n        for (let i = 0; i < this.loggedInUser.friends.length; i++) {\n          if (this.loggedInUser.friends[i] === this.user._id) {\n            this.loggedInUser.friends = this.loggedInUser.friends.splice(i, 1);\n            this.lu.setLoggedInUser(this.user);\n            break;\n          }\n        }\n    }\n  \n}\n","import {bindable} from 'aurelia-framework';\n\nexport class EntryCustomElement {\n    @bindable entry;\n    @bindable viewProfileFunction;\n\n    viewProfile() {\n      this.viewProfileFunction();\n    }\n\n}","import {inject} from 'aurelia-framework';\nimport {Router} from 'aurelia-router';\nimport RiderService from '../../services/riderService';\n\n@inject(RiderService, Router)\nexport class UserView {\n\n    constructor(rs, r) {\n        this.riderService = rs;\n        this.router = r;\n        this.riderService.getUserList().then( res => {\n            this.entries = res.content;\n        });\n    }\n  \n    viewProfile(entry) {\n        console.log(entry);\n        this.router.navigate('/userProfile/:' + entry._id);                 //TODO\n    }\n\n}"],"sourceRoot":".."}